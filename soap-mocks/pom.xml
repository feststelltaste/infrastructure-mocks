<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.pbilstein.infrastructuremocks</groupId>
	<artifactId>soap-mocks</artifactId>
	<version>DEV-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>com.github.pbilstein.infrastructuremocks:soap-mocks</name>
	<description>An application using soap-mocks-lib in an maven environment that uses embedded tomcat to start a server.</description>
	<url>https://github.com/pbilstein/infrasturcture-mocks</url>

	<scm>
		<connection>scm:git:git@github.com:pbilstein/infrastructure-mocks.git</connection>
		<developerConnection>scm:git:git@github.com:pbilstein/infrastructure-mocks.git</developerConnection>
		<url>git@github.com:pbilstein/infrastructure-mocks.git</url>
	</scm>
	<developers>
		<developer>
			<name>Peter Bilstein</name>
			<email>pbilstein@gmail.com</email>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mock.port>12080</mock.port>
		<tomcat.version>8.0.33</tomcat.version>
	</properties>

	<build>
		<finalName>soap-mocks</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>unpack-tomcat</id>
						<phase>install</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeGroupIds>org.apache.tomcat</includeGroupIds>
							<includeArtifactIds>tomcat</includeArtifactIds>
							<version>${tomcat.version}</version>
							<outputDirectory>
								${project.build.directory}
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<port>${mock.port}</port>
					<systemProperties>
						<CATALINA_OPTS>
							-Djava.awt.headless=true -Dfile.encoding=UTF-8
						</CATALINA_OPTS>
						<soapmocks.files.basedir>${basedir}/conf</soapmocks.files.basedir>
						<soapmocks.proxyrecord.dir>${basedir}/target/proxyrecords</soapmocks.proxyrecord.dir>
						<!-- soapmocks.jaxws.nomock.methods.force>sayHello</soapmocks.jaxws.nomock.methods.force -->
					</systemProperties>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.build.directory}/apache-tomcat-${tomcat.version}/webapps</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/apache-tomcat-${tomcat.version}/webapps</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>soap-mocks.war</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-2</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/apache-tomcat-${tomcat.version}</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/tomcat</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-3</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/apache-tomcat-${tomcat.version}/conf-soapmocks</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/conf</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<descriptor>${basedir}/src/assembly/tomcat.xml</descriptor>
				</configuration>
				<executions>
					<execution>
						<id>create-archive</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- usage of jax-ws maven plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxws-maven-plugin</artifactId>
				<version>1.12</version>
				<executions>
					<execution>
						<id>HelloServiceWsdl</id>
						<goals>
							<goal>wsimport</goal>
						</goals>
						<configuration>
							<wsdlFiles>
								<wsdlFile>HelloService.wsdl</wsdlFile>
							</wsdlFiles>
							<packageName>soapmocks.generated.helloservice</packageName>
							<!-- Without this, multiple WSDLs won't be processed :( -->
							<staleFile>${project.build.directory}/jaxws/stale/wsdl.HelloServiceWsdl.done</staleFile>
						</configuration>
					</execution>

					<!-- ADD SERVICES HERE -->

				</executions>

				<configuration>
					<sourceDestDir>target/generated-code/src</sourceDestDir>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-code/src</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>
											jaxws-maven-plugin
										</artifactId>
										<versionRange>[1.12,)</versionRange>
										<goals>
											<goal>wsimport</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>com.github.pbilstein.infrastructure-mocks</groupId>
			<artifactId>soap-mocks-lib</artifactId>
			<version>0.13</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat</artifactId>
			<version>${tomcat.version}</version>
			<type>tar.gz</type>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
